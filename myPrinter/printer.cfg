[include mainsail.cfg]
[include autoz.cfg]

[virtual_sdcard]
path: /home/klipman/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# This file contains common pin mappings for Anet A8 printer from 2016
# and 2017. To use this config, the firmware should be compiled for
# the AVR atmega1284p.

# Note that the "make flash" command does not work with Anet boards -
# the boards are typically flashed with this command:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf.hex

# See docs/Config_Reference.md for a description of parameters.


#old AnetA8Mcu
[mcu]
#serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.2:1.0-port0
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0


#Uno CNC board
# The "zboard" micro-controller will be used to control the Z axis.
[mcu zboard]
#serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.3:1.0-port0
serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__Arduino_Uno_64932343638351B092B0-if00


[stepper_x]
step_pin: PD7
dir_pin: PC5
enable_pin: !PD6
microsteps: 16
rotation_distance: 32
#step_distance: .01
endstop_pin: ^!PC2
position_endstop: -35
position_max: 240
position_min: -35
homing_speed: 50

[stepper_y]
step_pin: PC6
dir_pin: PC7
enable_pin: !PD6
microsteps: 16
rotation_distance: 32
#step_distance: .01
endstop_pin: ^!PC3
position_endstop: -8
position_min: -8
position_max: 220
homing_speed: 50

# Orig Anet
# [stepper_z]
# step_pin: zboard:PB3
# dir_pin: zboard:!PB2
# enable_pin: zboard:!PA5
# microsteps: zboard:16
# rotation_distance: zboard:8
# endstop_pin: zboard:^!PC4
# position_endstop: zboard:0.5
# position_max: zboard:240
# homing_speed: zboard:20


#Uno CNC as
#[stepper_x] port
[stepper_z]
step_pin: zboard:PD2
dir_pin: !zboard:PD5
enable_pin: !zboard:PB0
microsteps: 16
rotation_distance: 8
#step_distance: .0025
# endstop_pin is required even if you don't use endstops.
# Add ! after ^ if your use NO endstops instead of NC.
endstop_pin: zboard:PB4 # PB4  d12 Spindle enable
#endstop_pin:probe:z_virtual_endstop
position_endstop: 0.5
position_max: 240
homing_speed: 1
second_homing_speed: 1

#[stepper_y] port
[stepper_z1]
step_pin: zboard:PD3
dir_pin: !zboard:PD6
enable_pin: !zboard:PB0
microsteps: 16
rotation_distance: 8
#step_distance: .0025
## endstop_pin is required even if you don't use endstops.
## Add ! after ^ if your use NO endstops instead of NC.
#endstop_pin: zboard:^PB2
## No need to set home direction manually: zboard:Klipper understands correct direction by seeing that position_endstop = position_max
#position_endstop: zboard:220
#position_max: zboard:220
#homing_speed: zboard:50


[extruder]
step_pin: PB1
dir_pin: PB0
enable_pin: !PD6
microsteps: 16
rotation_distance: 33.600
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA7
control: pid
pid_Kp: 2.151492
pid_Ki: 0.633897
pid_Kd: 230.042965
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PD4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA6
control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PB4

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1000
max_z_velocity: 20
max_z_accel: 100

[display]
lcd_type: hd44780
rs_pin: PA3
e_pin: PA2
d4_pin: PD2
d5_pin: PD3
d6_pin: PC0
d7_pin: PC1
up_pin: PA1
analog_range_up_pin: 9000, 13000
down_pin: PA1
analog_range_down_pin: 800, 1300
click_pin: PA1
analog_range_click_pin: 2000, 2500
back_pin: PA1
analog_range_back_pin: 4500, 5000
#kill_pin: PA1
#analog_range_kill_pin: 400, 600


# Multiple Z stepper tilt adjustment. This feature enables independent
# adjustment of multiple z steppers (see stepper_z1 section below) to
# adjust for tilt. If this section is present then a Z_TILT_ADJUST
# extended G-Code command becomes available.
[z_tilt]
z_positions:
  -80,0
  300,0
#    A newline separated list of X,Y coordinates describing the
#    location of each Z stepper. The first entry corresponds to
#    stepper_z, the second to stepper_z1, the third to stepper_z2,
#    etc. This parameter must be provided.
points:
  -18,183.5
  122,183.5
#    A newline separated list of X,Y points that should be probed
#    during a Z_TILT_ADJUST command. This parameter must be provided.
speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 15
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.


[probe]
pin:^zboard:PB1
#   Probe detection pin. If the pin is on a different microcontroller
#   than the Z steppers then it enables "multi-mcu homing". This
#   parameter must be provided.
deactivate_on_each_sample: False
#   This determines if Klipper should execute deactivation gcode
#   between each probe attempt when performing a multiple probe
#   sequence. The default is True.
x_offset: 69.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: -42.5
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
z_offset:0
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 2.0
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 1
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
sample_retract_dist: 5.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
lift_speed:10
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
#samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 0
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.
#activate_gcode:
#   A list of G-Code commands to execute prior to each probe attempt.
#   See docs/Command_Templates.md for G-Code format. This may be
#   useful if the probe needs to be activated in some way. Do not
#   issue any commands here that move the toolhead (eg, G1). The
#   default is to not run any special G-Code commands on activation.
#deactivate_gcode:
#   A list of G-Code commands to execute after each probe attempt
#   completes. See docs/Command_Templates.md for G-Code format. Do not
#   issue any commands here that move the toolhead. The default is to
#   not run any special G-Code commands on deactivation.

#[safe_z_home]
#home_xy_position: 163,183.5  
#home_xy_position: 232,141
#69.0, -42.5
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
#speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
#z_hop:5
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
#z_hop_speed: 15.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.
#move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.






[force_move]
# Enable commands that force potentially unsafe movement
enable_force_move: True

[gcode_macro BRF_Z_Hop]
description: moves z axis up if it hasnt already been done
gcode:
	{% if printer.toolhead.homed_axes == "" %}
        M117 No axes are homed, homing ...
		SET_KINEMATIC_POSITION Z=0
		G91 #relative movement
		G1 Z5 F600 # move up 5 mm
		G90 #absolute positioning
	{% endif %} 


[gcode_macro BRF_Z_Home]
description: homes the z axis
gcode:
	#home_xy_position: 163,183.5  
	#home_xy_position: 232,141 for sensor
	#69.0, -42.5
	G1 X232 Y141 F3000 #move to the homing pos 
	
	#Turn on IO before homing
	SET_PIN PIN=DoNzzlHgtTstPin VALUE=1  
	G28 Z
	#Turn off IO after homing
	SET_PIN PIN=DoNzzlHgtTstPin VALUE=0 
	G1 Z10 F3000 #move to the homing pos 

[homing_override]
gcode:
#   A list of G-Code commands to execute in place of G28 commands
#   found in the normal g-code input. See docs/Command_Templates.md
#   for G-Code format. If a G28 is contained in this list of commands
#   then it will invoke the normal homing procedure for the printer.
#   The commands listed here must home all axes. This parameter must
#   be provided.
  BRF_Z_Hop
  {% if not 'Z' in params and not 'Y' in params and 'X' in params %}
	  g28 X 
	  G1 X0 F3000 
  {% elif not 'Z' in params and not 'X' in params and 'Y' in params %}
	  g28 Y
	  G1 Y0 F3000	  
  {% elif not 'X' in params and not 'Y' in params and 'Z' in params %}
	  BRF_Z_Home
  {% else %}
    M84
    BRF_Z_Hop
	g28 X
	G1 X0  F3000
	G28 Y
	G1 Y0  F3000
	BRF_Z_Home
  {% endif %} 
	 
#axes: xyz
axes: xyz
#   The axes to override. For example, if this is set to "z" then the
#   override script will only be run when the z axis is homed (eg, via
#   a "G28" or "G28 Z0" command). Note, the override script should
#   still home all axes. The default is "xyz" which causes the
#   override script to be run in place of all G28 commands.
#set_position_x:
#set_position_y:
#set_position_z:
#   If specified, the printer will assume the axis is at the specified
#   position prior to running the above g-code commands. Setting this
#   disables homing checks for that axis. This may be useful if the
#   head must move prior to invoking the normal G28 mechanism for an
#   axis. The default is to not force a position for an axis.

#Define io for testing the nozzle_diameter
[output_pin DoNzzlHgtTstPin]
pin: zboard:PB5  # PB5  d13 Spindle direction
pwm: False  # Set to True if you want PWM control
value: 0  # Initial state (0 = off, 1 = on
shutdown_value:0

#[gcode_button DiNzzlHgtTstPin]
#pin: ^zboard:PB6 # PB6  d13 Spindle direction
#pullup: True This is done with the ^
#press_gcode:
    #M118 Button Pressed
    #NOZZLE_CALIBRATION
#release_gcode:
    #M118 Button Released


# #Iolist for CNC v3, 
# #cpu, Arduino, Name

# PC0  A0 Reset/Abort
# PC1  A1 Feed Hold
# PC2  A2 Cycle Start/resume
# PC3  A3 Cooland enable
# PC4  A4 SBA
# PC5  A5 SEL

# PD0  d0 RX
# PD1  d1 TX
# PD2  d2 Step Pulse x-Axis
# PD3  d3 Step Pulse y-Axis
# PD4  d4 Step Pulse z-Axis
# PD5  d5 Direktion x-Axis
# PD6  d6 Direktion y-Axis
# PD7  d7 Direktion z-Axis

# PB0  d8 Stepper enable
# PB1  d9 Limint x-axis
# PB2  d10 Limit y-axis
# PB3  d11 Limit z-axis
# PB4  d12 Spindle enable
# PB5  d13 Spindle direction
